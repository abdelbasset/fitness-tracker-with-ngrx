{"version":3,"sources":["src/app/training/current-training/current-training.component.html","src/app/training/new-training/new-training.component.html","src/app/training/past-trainings/past-trainings.component.html","src/app/training/training.component.html","src/app/training/current-training/current-training.component.css","src/app/training/current-training/current-training.component.ts","src/app/training/current-training/stop-training.component.ts","src/app/training/new-training/new-training.component.css","src/app/training/new-training/new-training.component.ts","src/app/training/past-trainings/past-trainings.component.css","src/app/training/past-trainings/past-trainings.component.ts","src/app/training/training-routing.module.ts","src/app/training/training.component.css","src/app/training/training.component.ts","src/app/training/training.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<section class=\\\"current-training\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-progress-spinner mode=\\\"determinate\\\" [value]=\\\"progress\\\"></mat-progress-spinner>\\n  <h1>{{progress}} %</h1>\\n  <p>Keep on going, you can do it !</p>\\n  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"onStop()\\\">Stop</button>\\n</section>\"","export default \"<section class=\\\"new-training\\\" fxLayout fxLayoutAlign=\\\"center\\\">\\n  <form (ngSubmit)=\\\"onStartTraining(f)\\\" #f=\\\"ngForm\\\">\\n    <mat-card fxFlex.xs=\\\"100%\\\" fxFlex=\\\"400px\\\">\\n      <mat-card-title fxLayoutAlign=\\\"center\\\">Time To Start a workout ! </mat-card-title>\\n      <mat-card-content fxLayoutAlign=\\\"center\\\">\\n        <mat-form-field *ngIf=\\\"!isLoading && exercises\\\">\\n          <mat-select placeholder=\\\"Choose Exercise\\\" ngModel name=\\\"exercise\\\" required>\\n            <mat-option *ngFor=\\\"let exercise of exercises\\\" [value]=\\\"exercise.id\\\">\\n              {{ exercise.name }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n      </mat-card-content>\\n      <mat-card-actions fxLayoutAlign=\\\"center\\\" *ngIf=\\\"!isLoading\\\">\\n        <button *ngIf=\\\"exercises\\\" type=\\\"submit\\\" mat-button color=\\\"primary\\\" [disabled]= \\\"f.invalid\\\">Start</button>\\n        <button *ngIf=\\\"!exercises\\\" type=\\\"button\\\" mat-button color=\\\"primary\\\" (click)=\\\"fetchExercises()\\\" >Fetch again</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </form>\\n</section>\"","export default \"<div fxLayoutAlign=\\\"center center\\\">\\n<mat-form-field fxFlex=\\\"40%\\\">\\n  <input matInput type=\\\"text\\\" name=\\\"\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n</div>\\n<mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n  <ng-container matColumnDef=\\\"date\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.date.toDate() | date:'dd/MM/yyyy'}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"calories\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Calories</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.calories | number}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"duration\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Duration</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.duration | number}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"state\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>State</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.state}}</mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"> </mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\n</mat-table>\\n\\n<mat-paginator \\n              [pageSize]=\\\"1\\\"\\n              [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n              >\\n</mat-paginator>\"","export default \"<mat-tab-group *ngIf=\\\"!onGoingTraining\\\">\\n    <mat-tab label=\\\"New Exercice\\\"> \\n      <app-new-training></app-new-training>  \\n    </mat-tab>\\n    <mat-tab label=\\\"Past Exercices\\\"> \\n        <app-past-trainings></app-past-trainings>\\n    </mat-tab>\\n  </mat-tab-group>\\n  <app-current-training *ngIf=\\\"onGoingTraining\\\" (trainingExit)=\\\"onGoingTraining = false\\\"></app-current-training>\"","export default \".current-training{\\n    padding: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhaW5pbmcvY3VycmVudC10cmFpbmluZy9jdXJyZW50LXRyYWluaW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvdHJhaW5pbmcvY3VycmVudC10cmFpbmluZy9jdXJyZW50LXRyYWluaW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3VycmVudC10cmFpbmluZ3tcbiAgICBwYWRkaW5nOiAzMHB4O1xufSJdfQ== */\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material';\n\nimport { StopTrainingComponent } from './stop-training.component';\nimport { TrainingService } from '../training.service';\n\n@Component({\n  selector: 'app-current-training',\n  templateUrl: './current-training.component.html',\n  styleUrls: ['./current-training.component.css']\n})\nexport class CurrentTrainingComponent implements OnInit {\n  @Output() trainingExit = new EventEmitter();\n  progress = 0;\n  timer: number;\n  constructor(private dialog: MatDialog, private trainingService: TrainingService) { }\n\n  ngOnInit() {\n    this.startOrResumeTimer();\n  }\n\n  startOrResumeTimer() {\n    const step = this.trainingService.getRunningExercise().duration / 100 * 1000 ;\n    this.timer = setInterval(() => {\n      this.progress = this.progress + 1\n      if (this.progress >= 100) {\n        this.trainingService.completeExercise();\n        clearInterval(this.timer);\n      }\n    }, step);\n  }\n\n  onStop() {\n    clearInterval(this.timer);\n    const dialogRef = this.dialog.open(StopTrainingComponent, {\n      data: {\n        progress: this.progress\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.trainingService.cancelExercise(this.progress)\n      } else {\n        this.startOrResumeTimer();\n      }\n    })\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'app-stop-traning',\n    template:`<h1 mat-dialog-title>Are you Sure ? </h1>\n                <mat-dialog-content>\n                <p> You already got {{ passedData.progress }} %</p>\n                </mat-dialog-content>\n              <mat-dialog-actions>\n                    <button mat-button [mat-dialog-close]= \"true\"> YES </button>\n                    <button mat-button [mat-dialog-close]= \"false\" > NO </button>\n              </mat-dialog-actions>  `\n})\n\nexport class StopTrainingComponent{\n    constructor(@Inject(MAT_DIALOG_DATA) public passedData : any ){}\n}","export default \".new-training{\\n    padding: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhaW5pbmcvbmV3LXRyYWluaW5nL25ldy10cmFpbmluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL3RyYWluaW5nL25ldy10cmFpbmluZy9uZXctdHJhaW5pbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uZXctdHJhaW5pbmd7XG4gICAgcGFkZGluZzogMzBweDtcbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { TrainingService } from '../training.service';\nimport { Exercise } from '../exercise.model';\nimport { NgForm } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators/map';\nimport { UIService } from '../../shared/ui.service';\n\n@Component({\n  selector: 'app-new-training',\n  templateUrl: './new-training.component.html',\n  styleUrls: ['./new-training.component.css']\n})\nexport class NewTrainingComponent implements OnInit, OnDestroy {\n  constructor(private trainingService: TrainingService, private uiService: UIService) { }\n  //exercises: Exercise[] = [];\n  exercises: Exercise[];\n  isLoading = true;\n  private exerciseSubscription: Subscription;\n  private loadingSubscription: Subscription;\n\n  ngOnInit() {\n    //this.exercises = this.trainingService.getAvilableExercises();\n    this.loadingSubscription = this.uiService.loadingStateChanged.subscribe(\n      isLoading => {\n        this.isLoading = isLoading;\n      }\n    );\n    this.exerciseSubscription = this.trainingService.exercisesChanged.subscribe(\n      exercises => {\n        this.exercises = exercises;\n      }\n    );\n    this.fetchExercises();\n  }\n  fetchExercises() {\n    this.trainingService.fetchAvilableExercises();\n  }\n\n  onStartTraining(form: NgForm) {\n    console.log(form.value);\n    this.trainingService.startExercise(form.value.exercise)\n  }\n\n  ngOnDestroy() {\n    if (this.exerciseSubscription) {\n      this.exerciseSubscription.unsubscribe();\n    }\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWluaW5nL3Bhc3QtdHJhaW5pbmdzL3Bhc3QtdHJhaW5pbmdzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MatTableDataSource, MatSort, MatPaginatorModule, MatPaginator } from '@angular/material';\nimport { Exercise } from '../exercise.model';\nimport { TrainingService } from '../training.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-past-trainings',\n  templateUrl: './past-trainings.component.html',\n  styleUrls: ['./past-trainings.component.css']\n})\nexport class PastTrainingsComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  displayedColumns = ['date', 'name', 'duration', 'calories', 'state'];\n  dataSource = new MatTableDataSource<Exercise>();\n  private exChangedSubscription: Subscription;\n\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n\n  constructor(private trainingService: TrainingService) { }\n\n  ngOnInit() {\n    this.exChangedSubscription = this.trainingService.finishedExercisesChanged.subscribe((exercises: Exercise[]) => {\n      this.dataSource.data = exercises;\n    });\n    this.trainingService.fetchCompletedOrCancelledExercises();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  doFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  ngOnDestroy() {\n    if (this.exChangedSubscription) {\n      this.exChangedSubscription.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrainingComponent } from './training.component';\n\nconst routes: Routes = [\n    { path: '', component: TrainingComponent }\n]\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class TrainingRoutingModule {}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWluaW5nL3RyYWluaW5nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { TrainingService } from './training.service';\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.css']\n})\nexport class TrainingComponent implements OnInit, OnDestroy {\n  onGoingTraining = false;\n  exerciseSubscription: Subscription;\n\n  constructor(private trainingService: TrainingService) { }\n\n  ngOnInit() {\n    this.exerciseSubscription = this.trainingService.exerciseChanged.subscribe(\n      exercise => {\n        if (exercise) {\n          this.onGoingTraining = true;\n        } else {\n          this.onGoingTraining = false;\n        }\n      })\n  }\n  ngOnDestroy(){\n    if(this.exerciseSubscription){\n      this.exerciseSubscription.unsubscribe();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { PastTrainingsComponent } from './past-trainings/past-trainings.component';\nimport { CurrentTrainingComponent } from './current-training/current-training.component';\nimport { NewTrainingComponent } from './new-training/new-training.component';\nimport { TrainingComponent } from './training.component';\nimport { StopTrainingComponent } from './current-training/stop-training.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TrainingRoutingModule } from './training-routing.module';\n\n@NgModule({\n    declarations: [\n        TrainingComponent, \n        CurrentTrainingComponent, \n        NewTrainingComponent, \n        PastTrainingsComponent,\n        StopTrainingComponent\n    ],\n    imports:[\n        SharedModule,\n        TrainingRoutingModule\n    ],\n    exports: [],\n    entryComponents: [StopTrainingComponent]\n})\nexport class TrainingModule {}"],"sourceRoot":"webpack:///"}